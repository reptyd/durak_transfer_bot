import logging
import html
import re
import aiohttp

from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.markdown import hbold
from aiogram.filters import CommandStart

BOT_TOKEN = 'YOUR_BOT_TOKEN'

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())


async def extract_token_from_play_url(url: str) -> str | None:
    """–ü—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å profileToken –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ play"""
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                text = await resp.text()
                token_match = re.search(r'"profileToken"\s*:\s*"([^"]+)"', text)
                if token_match:
                    return token_match.group(1)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞")
    return None


async def send_transfer_request(profile_token: str, user_token: str) -> tuple[int, str]:
    url = 'https://durak.rstgames.com/api/v1/account/transfer'
    headers = {"Content-Type": "application/json"}
    payload = {
        "sourceProfileToken": profile_token,
        "targetUserToken": user_token
    }

    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(url, json=payload, headers=headers) as resp:
                text = await resp.text()
                return resp.status, text
    except Exception as e:
        return 500, str(e)


@dp.message(CommandStart())
async def on_start(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ 2 —Å—Å—ã–ª–∫–∏:\n"
                         f"1 ‚Äî —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å (—Å id_token)\n"
                         f"2 ‚Äî —Å—Å—ã–ª–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (user token)")


@dp.message()
async def handle_tokens(message: Message):
    urls = re.findall(r'https://durak\.rstgames\.com/\S+', message.text)
    if len(urls) != 2:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ä–æ–≤–Ω–æ 2 —Å—Å—ã–ª–∫–∏.")
        return

    play_url, user_url = urls

    await message.answer("üîç –ü–æ–ª—É—á–∞—é —Ç–æ–∫–µ–Ω—ã...")

    profile_token = await extract_token_from_play_url(play_url)
    if not profile_token:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å profileToken –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Å—ã–ª–∫–∏.")
        return

    user_token_match = re.search(r'token=([a-zA-Z0-9\.\-_]+)', user_url)
    if not user_token_match:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å userToken –∏–∑ –≤—Ç–æ—Ä–æ–π —Å—Å—ã–ª–∫–∏.")
        return

    user_token = user_token_match.group(1)

    await message.answer("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å –ø—Ä–æ—Ñ–∏–ª—è...")

    status, text = await send_transfer_request(profile_token, user_token)

    if status == 200:
        await message.answer("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω!")
    else:
        escaped = html.escape(text)
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ (–∫–æ–¥ {status}):\n<pre>{escaped}</pre>")


if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
